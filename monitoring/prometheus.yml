global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'thread-performance-monitor'

rule_files:
  - "alert-rules.yml"

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # Spring Boot Application - Platform Threads
  - job_name: 'spring-boot-platform'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    scrape_timeout: 10s
    static_configs:
      - targets: ['host.docker.internal:8080']
    labels:
      thread_type: 'platform'
      service: 'thread-demo'
      environment: 'test'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'jvm_.*|http_.*|tomcat_.*|system_.*|process_.*|hikaricp_.*'
        action: keep

  # Spring Boot Application - Virtual Threads
  - job_name: 'spring-boot-virtual'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    scrape_timeout: 10s
    static_configs:
      - targets: ['host.docker.internal:8081']
    labels:
      thread_type: 'virtual'
      service: 'thread-demo'
      environment: 'test'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'jvm_.*|http_.*|tomcat_.*|system_.*|process_.*|hikaricp_.*'
        action: keep

  # Alternative: If running apps in Docker containers
  - job_name: 'spring-boot-platform-docker'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['app-platform:8080']
    labels:
      thread_type: 'platform'
      service: 'thread-demo'
      environment: 'docker'

  - job_name: 'spring-boot-virtual-docker'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['app-virtual:8080']
    labels:
      thread_type: 'virtual'
      service: 'thread-demo'
      environment: 'docker'

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - "alertmanager:9093"